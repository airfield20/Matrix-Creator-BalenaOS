FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-node:latest


#################
# Install Systemd
#################

ENV container docker
RUN apt-get update && apt-get install -y --no-install-recommends \
		systemd-sysv \
	&& rm -rf /var/lib/apt/lists/*

# We never want these to run in a container
# Feel free to edit the list but this is the one we used
RUN systemctl mask \
    dev-hugepages.mount \
    sys-fs-fuse-connections.mount \
    sys-kernel-config.mount \

    display-manager.service \
    getty@.service \
    systemd-logind.service \
    systemd-remount-fs.service \

    getty.target \
    graphical.target

COPY systemd/entry.sh /usr/bin/entry.sh
COPY systemd/balena.service /etc/systemd/system/balena.service

RUN systemctl enable /etc/systemd/system/balena.service

STOPSIGNAL 37
ENTRYPOINT ["/usr/bin/entry.sh"]
ENV INITSYSTEM on


######################
# Finish setup systemd
######################

#######################################
# Install Matrix Creator Dependencies #
#######################################

# use apt—get if you need to install dependencies, # for instance if you need ALSA sound utils, just uncomment the lines below. # RUN apt—get update && apt—get install —yq \ # alsa—utils li$
RUN echo "" >/boot/cmdline.txt && \
 echo "dtparam=spi=on" >/boot/config.txt && \
 apt-get update && apt-get upgrade && \
 apt-get install --no-install-recommends apt-utils && \
 apt-get -y install python3-pip python-pip python-setuptools python3-setuptools && \
 apt-get install lsb-release apt-transport-https && \
 apt-get update && apt-get upgrade

RUN pip install wheel && pip3 install wheel

RUN apt-get install cmake g++ git build-essential && \
 apt-get install sox alsa-utils && \
 apt-get install python3-dev

#################################################
# Manual install of matrixio deb files in armhf #
#################################################
#Add armhf to apt
RUN dpkg --add-architecture armhf && \
    sed -i 's/deb http:/deb [arch=armhf,arm64] http:/g' /etc/apt/sources.list

#Add armhf version of matrix repositories to apt
RUN apt-get install lsb-release apt-transport-https && \
    curl https://apt.matrix.one/doc/apt-key.gpg | sudo apt-key add - && \
    echo "deb [arch=armhf] https://apt.matrix.one/raspbian $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/matrixlabs.list && \
    apt-get update

# Setting up the user application
WORKDIR /usr/src/app
COPY . /usr/src/app

#Install armhf versions of libreadline deps and manually install libreadline6 from debs folder
RUN apt-get install multiarch-support gcc-8-base:armhf libgcc1:armhf libc6:armhf libtinfo5:armhf && \
    dpkg -i debs/libreadline6_6.3-8+b3_armhf.deb

#Manually install wiringpi
RUN dpkg -i debs/wiringpi_2.50_armhf.deb

RUN apt-get install matrixio-openocd matrixio-xc3sprog libfftw3-single3:armhf libfftw3-dev:armhf libgflags-dev:armhf libfftw3-double3:armhf libgomp1:armhf libgflags2.2:armhf && \
    dpkg -i debs/libmatrixio-creator-hal_0.3.8_armhf.deb && \
    apt-get install libncurses5:armhf && \
    dpkg -i debs/matrixio-creator-init_0.4.17_armhf.deb

###############################
# Build Matrix kernel modules #
###############################

RUN apt-get update && apt-get install -y curl wget build-essential libelf-dev awscli bc flex libssl-dev python bison

ENV VERSION '2.50.1+rev1.prod'
RUN ./build.sh %%BALENA_MACHINE_NAME%% $VERSION matrixio-kernel-modules/src

#############################
# Build Matrix hal examples #
#############################

RUN ls && cd matrix-hal-examples && ls && mkdir build
RUN cd matrix-hal-examples/build && cmake .. 
RUN cd matrix-hal-examples/build && ls && make -j4

CMD modprobe spi-bcm2835 && modprobe snd_bcm2835 && modprobe snd-dummy && bash run.sh && bash start.sh
